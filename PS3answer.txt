#!/usr/bin/python3

#1 
# strings, lists, tuples

#2

seq_length =  len("GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG")

print ("length of sequence is ",seq_length)

#3

seq = "GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG"

AT = seq.count('A') + seq.count('T')
ATcontent = AT / len(seq)
GCcontent = 1-ATcontent 


print("AT content: {:.2f}".format(ATcontent),"\t GC content: {:.2f}".format(GCcontent))

#4
revseq = "".join(reversed(seq)).lower()
revseq = revseq.replace('a','T')
revseq = revseq.replace('t','A')
revseq = revseq.replace('g','C')
revseq = revseq.replace('c','G')

print(revseq)

#6

EcoRI = seq.find('GAATTC') + 1

print ("the start postion of an EcoRI site is: ",EcoRI)

print ("the start postion of an EcoRI site is {0:d}:".format(seq.find('GAATTC') +1))
print ("The end position of an EcoRI site is {0:d}:".format(seq.find('GAATTC')+7))

#7

Favs = ["Pinkerton","Maple Dips", "Forests", "Euphoria", "Murakami"]
print("b.", Favs[2])
Favs[2] = "King Of Spain"
print("d.", Favs[2])
Favs.append("Mountains")
print("e.",Favs)
Favs.insert(0,"Pho")
print("f.",Favs)
Favs.insert(3,"Little Vinnie's")
print("g.",Favs)
Favs.pop()
print("h.",Favs)
Favs.pop(0)
print("i.",Favs)
Favs.pop(2)
print("j.", Favs)

#8

string = "sapiens, erectis, neanderthalensis"
print(string)
print(string.split(", "))
string_list = string.split(", ")
print(string_list)
print(sorted(string_list))
print(sorted(string_list,key=len))


#9

my_list = ['a','bb','ccc']
list_copy = my_list
print("my_list = ",my_list)
list_copy.append('dddd')
print("my_list = ",my_list)

my_list2 = ['a','bb','ccc']
list_copy2 = my_list2.copy()
print("my_list2 = ",my_list2)
list_copy2.append('dddd')
print("my_list2 = ",my_list2)
